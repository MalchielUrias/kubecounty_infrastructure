# on:
#   push:
#     branches:
#       - main
#     paths:
#       - "terraform/**"
on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
    paths:
    - "terraform/**"
  pull_request_review:
    types: [submitted]
    
jobs:
  terraform-lint:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request' && 
      (github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened'))
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
      
      - name: Run TFLint
        run: |
          tflint --init
          tflint --format compact

  infracost-pull-request-checks:
    name: Infracost Pull Request Checks
    if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write 
    steps:

      - name: Setup Infracost
        uses: infracost/actions/setup@v3
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: '${{ github.event.pull_request.base.ref }}'

      - name: Generate Infracost cost estimate baseline
        run: |
          infracost breakdown --path=. \
                              --format=json \
                              --out-file=/tmp/infracost-base.json

      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Generate Infracost diff
        run: |
          infracost diff --path=. \
                          --format=json \
                          --compare-to=/tmp/infracost-base.json \
                          --out-file=/tmp/infracost.json 

      - name: Post Infracost comment
        run: |
            infracost comment github --path=/tmp/infracost.json \
                                     --repo=$GITHUB_REPOSITORY \
                                     --github-token=${{ github.token }} \
                                     --pull-request=${{ github.event.pull_request.number }} \
                                     --behavior=update
  terrgrunt-plan:
    runs-on: ubuntu-latest
    needs: [terraform-lint, infracost]
    if: |
      (github.event_name == 'pull_request' && 
      (github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.action == 'reopened'))
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        
      - name: Save Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

  terraform-apply:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request_review' && 
      github.event.review.state == 'approved'
    needs: terraform-plan
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      
      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

  handle-rejection:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request_review' && 
      github.event.review.state == 'changes_requested') ||
      (github.event_name == 'pull_request' && 
      github.event.action == 'closed' && 
      !github.event.pull_request.merged)
    steps:
      - name: Handle Rejection
        run: |
          echo "PR was rejected or closed without merging"
          # Add any cleanup or notification steps here